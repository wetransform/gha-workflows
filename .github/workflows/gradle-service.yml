on:
  workflow_call:
    inputs:
      gradle-tasks:
        description: Tasks to run
        required: true
        type: string
      java-version:
        description: Java version to use for build
        required: true
        type: string
      notify-failure:
        description: Notify on build failure to Slack
        default: true
        type: boolean
      expect-tests:
        description: If JUnit test results are expected
        default: true
        type: boolean
      image-tag:
        description: Image tag to scan after build
        required: true
        type: string
      image-tag-2:
        description: Additional image tag to scan after build
        type: string
        default: ''
      image-tag-3:
        description: Additional image tag to scan after build
        type: string
        default: ''
      multi-module:
        description: If this is a multi-module project
        type: boolean
        default: false
    secrets:
      # GH_PAT:
      #   required: true
      DOCKER_HUB_USERNAME:
      DOCKER_HUB_PASSWORD:
      DOCKER_HUB_EMAIL:
      WETF_ARTIFACTORY_USER:
      WETF_ARTIFACTORY_PASSWORD:
      SLACK_NOTIFICATIONS_BOT_TOKEN:
      ENV_VARS: # secret for passing on additional env variables based on https://github.com/orgs/community/discussions/26671#discussioncomment-6776498

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # For each environment variable's key-value pair, mask the value from logs.
      - name: Populate custom environment variables
        id: environment_variables
        env:
          env_vars: ${{ secrets.ENV_VARS }}
        run: |
          if [ -z "$env_vars" ]; then
            exit 0
          else
            # Iterate over all key-value pairs passed into this workflow and
            # add them as environment variables for use in subsequent steps.
            # Keys prefixed with "BASE64_" will be decoded from base64 and the
            # prefix will be removed. E.g., "BASE64_KEY=value" becomes "KEY=value".
            for i in $env_vars; do
              if [[ $i == BASE64_* ]]; then i=$(echo $i | sed 's/^BASE64_//g' | sed 's/=.*//g')=$(echo ${i#*=} | base64 -di | base64 -di); fi
              echo ::add-mask::${i#*=}
              printf '%s\n' "$i" >> $GITHUB_ENV
            done
          fi

      #
      # Build, test and create Docker image
      #

      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          distribution: temurin
          java-version: ${{ inputs.java-version }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@e24011a3b5db78bd5ab798036042d9312002f252 # v3.2.0

      - name: Build and test with Gradle
        env:
          ORG_GRADLE_PROJECT_wetfArtifactoryUser: ${{ secrets.WETF_ARTIFACTORY_USER }}
          ORG_GRADLE_PROJECT_wetfArtifactoryPassword: ${{ secrets.WETF_ARTIFACTORY_PASSWORD }}
          ORG_GRADLE_PROJECT_dockerHubUsername: ${{ secrets.DOCKER_HUB_USERNAME }}
          ORG_GRADLE_PROJECT_dockerHubPassword: ${{ secrets.DOCKER_HUB_PASSWORD }}
          ORG_GRADLE_PROJECT_dockerHubEmail: ${{ secrets.DOCKER_HUB_EMAIL }}
          ORG_GRADLE_PROJECT_dockerHost: "unix:///var/run/docker.sock"
        run: ./gradlew ${{ inputs.gradle-tasks }}

      - name: Upload Gradle test reports
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        if: always()
        with:
          name: Gradle test reports
          retention-days: 7
          path: |
            ${{ inputs.multi-module && '*/build/reports/tests' || 'build/reports/tests' }}

      #
      # Security scans
      #

      - name: Make sure test-results folder exists
        run: mkdir -p ${{ inputs.multi-module && 'trivy-gha-scan/build/test-results' || 'build/test-results' }}

      - name: Vulnerability scan
        uses: wetransform/gha-trivy@760b666e0603bc58978d2830de6e5e6ce8ac5dc0 # v1.1.1
        with:
          image-ref: 'docker.io/${{ inputs.image-tag }}'
          junit-test-output: "${{ inputs.multi-module && 'trivy-gha-scan/build/test-results/trivy.xml' || 'build/test-results/trivy.xml' }}" # added to unit test report
          report-retention-days: 30
          report-tag: ${{ inputs.image-tag }}

      - name: Vulnerability scan (Image 2)
        uses: wetransform/gha-trivy@760b666e0603bc58978d2830de6e5e6ce8ac5dc0 # v1.1.1
        if: ${{ inputs.image-tag-2 != '' }}
        with:
          image-ref: 'docker.io/${{ inputs.image-tag-2 }}'
          junit-test-output: "${{ inputs.multi-module && 'trivy-gha-scan/build/test-results/trivy-2.xml' || 'build/test-results/trivy-2.xml' }}" # added to unit test report
          report-retention-days: 30
          report-tag: ${{ inputs.image-tag-2 }}

      - name: Vulnerability scan (Image 3)
        uses: wetransform/gha-trivy@760b666e0603bc58978d2830de6e5e6ce8ac5dc0 # v1.1.1
        if: ${{ inputs.image-tag-3 != '' }}
        with:
          image-ref: 'docker.io/${{ inputs.image-tag-3 }}'
          junit-test-output: "${{ inputs.multi-module && 'trivy-gha-scan/build/test-results/trivy-3.xml' || 'build/test-results/trivy-3.xml' }}" # added to unit test report
          report-retention-days: 30
          report-tag: ${{ inputs.image-tag-3 }}

      #
      # Report on unit tests and critical vulnerabilities
      #

        # https://github.com/marketplace/actions/junit-report-action
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@9379f0ccddcab154835d4e2487555ee79614fe95 # v4.2.1
        if: always() # always run even if the previous step fails
        with:
          report_paths: "${{ inputs.multi-module && '*/build/test-results/**/*.xml' || 'build/test-results/**/*.xml' }}"
          require_tests: ${{ inputs.expect-tests }}

          # Workaround for check that is additionally created being associated
          # to the wrong workflow/run. Instead not additional check is created.
          # See https://github.com/mikepenz/action-junit-report/issues/40
          annotate_only: true
          detailed_summary: true
          fail_on_failure: true # in case of critical security vulnerabilities, also required for Slack notification if only tests fail

      #
      # Report build failure to Slack
      #

        # https://github.com/marketplace/actions/slack-notify-build
      - name: Notify slack fail
        if: ${{ inputs.notify-failure && failure() }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@3665186a8c1a022b28a1dbe0954e73aa9081ea9e # v1.6.0
        with:
          channel: build-failures
          status: FAILED
          color: danger
