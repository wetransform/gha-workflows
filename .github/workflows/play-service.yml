on:
  workflow_call:
    inputs:
      command:
        description: Custom command to run for the build
        required: true
        type: string
      pre-build-command:
        description: Custom command to run before the build
        type: string
        default: ''
      java-version:
        description: Java version to use for build
        required: true
        type: string
      notify-failure:
        description: Notify on build failure to Slack
        default: true
        type: boolean
      junit-test-folder:
        description: Location where JUnit tests are stored, if any
        default: 'play/target/test-reports'
        type: string
      expect-tests:
        description: If JUnit test results are expected
        default: true
        type: boolean
      image-tag:
        description: Image tag to scan after build
        required: true
        type: string
      push-image:
        description: If the configure image should be pushed
        required: false
        default: false
        type: boolean
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_PASSWORD:
        required: true
      DOCKER_HUB_EMAIL:
      WETF_ARTIFACTORY_USER:
      WETF_ARTIFACTORY_PASSWORD:
      SLACK_NOTIFICATIONS_BOT_TOKEN:

jobs:
  run:
    runs-on: ${{ vars.CUSTOM_RUNNER || 'ubuntu-latest' }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          distribution: temurin
          java-version: ${{ inputs.java-version }}
          cache: sbt

      - name: Set up artifactory credentials
        if: env.WETF_ARTIFACTORY_USER
        env:
          WETF_ARTIFACTORY_USER: ${{ secrets.WETF_ARTIFACTORY_USER }}
          WETF_ARTIFACTORY_PASSWORD: ${{ secrets.WETF_ARTIFACTORY_PASSWORD }}
        run: |
          cat <<EOF > ~/.wetfArtifactory
          realm=Artifactory Realm
          host=artifactory.wetransform.to
          user=$WETF_ARTIFACTORY_USER
          password=$WETF_ARTIFACTORY_PASSWORD
          EOF

      - name: Login to DockerHub
        if: env.DOCKER_HUB_USERNAME
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}

      - name: Run custom pre-build command
        if: ${{ inputs.pre-build-command != '' }}
        run: ${{ inputs.pre-build-command }}

      - name: Run command
        run: ${{ inputs.command }}

      - name: Push image
        if: ${{ inputs.push-image }}
        run: docker push ${{ inputs.image-tag }}

      #
      # Security scans
      #

      - name: Make sure test-results folder exists
        run: mkdir -p ${{ inputs.junit-test-folder }}

      - name: Vulnerability scan
        uses: wetransform/gha-trivy@88e4f6f3203f7c8ce1704772c7c36a77759ef5a8 # v2.3.4
        with:
          image-ref: 'docker.io/${{ inputs.image-tag }}'
          junit-test-output: "${{ inputs.junit-test-folder }}/trivy.xml" # added to unit test report
          report-retention-days: 30
          report-tag: ${{ inputs.image-tag }}

      #
      # Report on unit tests and critical vulnerabilities
      #

        # https://github.com/marketplace/actions/junit-report-action
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@cf701569b05ccdd861a76b8607a66d76f6fd4857 # v5.5.1
        if: always() # always run even if the previous step fails
        with:
          report_paths: "${{ inputs.junit-test-folder }}/*.xml"
          require_tests: ${{ inputs.expect-tests }}

          # Workaround for check that is additionally created being associated
          # to the wrong workflow/run. Instead not additional check is created.
          # See https://github.com/mikepenz/action-junit-report/issues/40
          annotate_only: true
          detailed_summary: true
          fail_on_failure: true # in case of critical security vulnerabilities, also required for Slack notification if only tests fail

      #
      # Report build failure to Slack
      #

        # https://github.com/marketplace/actions/slack-notify-build
      - name: Notify slack fail
        if: ${{ inputs.notify-failure && failure() }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@3665186a8c1a022b28a1dbe0954e73aa9081ea9e # v1.6.0
        with:
          channel: build-failures
          status: FAILED
          color: danger
