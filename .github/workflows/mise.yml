#
# Mise workflow for running a task
#
# Intended to be run for branches or version tags (e.g. v1.0.0).
#
# Conventions:
# - workflow uses mise environment "ci"
# - runs a specific mise task (run-task input)
# - if an environment variable IMAGE_NAME is set by mise or the build, a security scan will be performed on the image
#
# Variants:
# - npm: Cache Node.js modules
#

on:
  workflow_call:
    inputs:
      run-task:
        description: mise task to run
        required: true
        type: string
      publish:
        description: If the task is a publish task (sets PUBLISH_VERSION environment variable)
        required: false
        default: false
        type: boolean
      variant:
        description: Workflow variant to use (leave empty or use one of 'npm')
        required: true
        type: string
      parallel:
        description: Run mise tasks in parallel (true) or sequentially (false)
        required: false
        default: false
        type: boolean
      default-branch:
        description: Name of the default branch (e.g. 'main' or 'master')
        required: false
        default: master
        type: string
      default-version:
        description: Version string to use for the default branch (e.g. 'latest')
        required: false
        default: latest
        type: string
      notify-failure:
        description: Notify on build failure to Slack
        default: true
        type: boolean
      skip-scan:
        description: If security scan and associated tasks should be skipped
        type: boolean
        default: false
    secrets:
      DOCKER_HUB_USERNAME:
      DOCKER_HUB_PASSWORD:
      GH_PAT:
      SLACK_NOTIFICATIONS_BOT_TOKEN:

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      #
      # Determine what to check out and what version to build
      #
      - name: Determine ref to checkout and version
        if: ${{ inputs.publish }}
        id: version
        run: |
          DEFAULT_BRANCH="${{ inputs.default-branch }}"
          DEFAULT_VERSION="${{ inputs.default-version }}"

          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" && -n "${{ github.event.inputs.version }}" ]]; then
            REF="refs/tags/v${{ github.event.inputs.version }}"
            VERSION="${{ github.event.inputs.version }}"
          elif [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            REF="${GITHUB_REF}"
            VERSION="${GITHUB_REF#refs/tags/v}"
          elif [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            BRANCH_NAME="${GITHUB_REF#refs/heads/}"
            REF="${GITHUB_REF}"
            if [[ "$BRANCH_NAME" == "$DEFAULT_BRANCH" ]]; then
              VERSION="$DEFAULT_VERSION"
            else
              VERSION="$BRANCH_NAME"
            fi
          else
            # fallback
            REF="refs/heads/${DEFAULT_BRANCH}"
            VERSION="$DEFAULT_VERSION"
          fi
          echo "ref=$REF" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          echo "PUBLISH_VERSION=$VERSION" >> $GITHUB_ENV

      #
      # Checkout source code
      #
      - name: Checkout specific ref
        if: ${{ inputs.publish }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ steps.version.outputs.ref }}
      - name: Checkout code
        if: ${{ !inputs.publish }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      #
      # Setup mise & tools
      #
      - name: Setup mise & tools
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0

      #
      # Optional login to Docker Hub
      #
      - name: Login to DockerHub
        if: env.DOCKER_HUB_USERNAME
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}

      #
      # npm: Cache Node.js modules
      #
      - name: Cache Node.js modules
        if: ${{ inputs.variant == 'npm' }}
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run mise task
        # Run mise tasks in parallel or sequentially based on input
        run: |
          TASK_NAME="${{ inputs.run-task }}"
          if [ "${{ inputs.parallel }}" = "true" ]; then
            mise run ${TASK_NAME}
          else
            mise run --raw ${TASK_NAME}
          fi
        env:
          MISE_ENV: ci
          # required for some builds, set if available
          GH_PAT: ${{ secrets.GH_PAT }}

      #
      # Security scans
      # Currently only supported for Docker image, env variable IMAGE_NAME must be set by mise or the build
      #
      - name: Make sure scan result folder exists
        if: ${{ !inputs.skip-scan && env.IMAGE_NAME }}
        run: mkdir -p trivy-gha-scan

      - name: Vulnerability scan
        if: ${{ !inputs.skip-scan && env.IMAGE_NAME }}
        uses: wetransform/gha-trivy@647b4e7c5a0b87529d0241afa9f22ca97d8d6a26 # v2.3.7
        with:
          image-ref: 'docker.io/${{ env.IMNAGE_NAME }}'
          junit-test-output: "trivy-gha-scan/trivy.xml" # added to unit test report
          report-retention-days: 30
          report-tag: ${{ env.IMAGE_NAME }}

        # https://github.com/marketplace/actions/junit-report-action
      - name: Publish scan report
        uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # v5.6.2
        if: ${{ !inputs.skip-scan && env.IMAGE_NAME && always() }} # always run even if the previous step fails
        with:
          report_paths: "trivy-gha-scan/trivy.xml"
          require_tests: true

          # Workaround for check that is additionally created being associated
          # to the wrong workflow/run. Instead not additional check is created.
          # See https://github.com/mikepenz/action-junit-report/issues/40
          annotate_only: true
          detailed_summary: true
          fail_on_failure: true # in case of critical security vulnerabilities, also required for Slack notification if only tests fail

      #
      # Report build failure to Slack
      # https://github.com/marketplace/actions/slack-notify-build
      #
      - name: Notify slack fail
        if: ${{ inputs.notify-failure && failure() }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@3665186a8c1a022b28a1dbe0954e73aa9081ea9e # v1.6.0
        with:
          channel: build-failures
          status: FAILED
          color: danger
